Fri Feb 14 00:53:46 UTC 2025
Linux LinuxMachine 5.15.167.4-microsoft-standard-WSL2 #1 SMP Tue Nov 5 00:21:55 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux
uid=1000(cssuwbstudent) gid=1000(cssuwbstudent) groups=1000(cssuwbstudent),10(wheel)
=====================================================
1. If the section below is empty, the program compiles 
   without warnings with -Wall -Wextra flags
=====================================================
=====================================================
2. If the section below is empty or has the expected output 
    the program puns and produces correct output
=====================================================
Starting testGraphBasic
Ending testGraphBasic
Starting testGraph0DFS
Ending testGraph0DFS
testGraph0BFS
Ending testGraph0DFS
Starting testGraph0Dijkstra
Ending testGraph0Dijkstra
Starting testGraph0NotDirected
Ending testGraph0NotDirected
Done!
=====================================================
3. If the section below is empty, then there are no clang-tidy warnings 
   (ignore warnings from system headers, such as "13554 warnings generated.")
=====================================================
22925 warnings generated.
41008 warnings generated.
52371 warnings generated.
Suppressed 52371 warnings (52371 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
=====================================================
4. If the section below is empty, clang-format does not find any formatting issues
   You can fix formatting errors using "clang-format -i <filename>" on command line
=====================================================
Running clang-format on ./graph.cpp
Running clang-format on ./graphtest.cpp
Running clang-format on ./main.cpp
=====================================================
5. If there are any memory leaks, it should be in the output below
=====================================================
=====================================================
6. Using valgrind to check for memory leaks
   Check for "definitely lost" in the output below
=====================================================
==3487== Memcheck, a memory error detector
==3487== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==3487== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==3487== Command: ./a.out
==3487== Parent PID: 3241
==3487== 
==3487== 
==3487== HEAP SUMMARY:
==3487==     in use at exit: 0 bytes in 0 blocks
==3487==   total heap usage: 318 allocs, 318 frees, 146,330 bytes allocated
==3487== 
==3487== All heap blocks were freed -- no leaks are possible
==3487== 
==3487== For lists of detected and suppressed errors, rerun with: -s
==3487== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
Fri Feb 14 00:54:00 UTC 2025
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================
